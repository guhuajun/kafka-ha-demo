services:
  traefik:
    image: traefik:latest
    hostname: traefik
    command:
      [
        "--api.insecure=true",
        "--providers.docker",
        "--accesslog=true",
        "--metrics.prometheus=true",
      ]
    ports:
      # The HTTP port
      - "80:80"
      # The Web UI (enabled by --api.insecure=true)
      - "8080:8080"
    volumes:
      # So that Traefik can listen to the Docker events
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      kafka-net:

  producer:
    image: greggu/producer:0.1
    build:
      context: ./app/producer
      dockerfile: Dockerfile
    environment:
      - PRODUCER_DELAY=0.01
      - START_DELAY=60
    depends_on:
      - grafana
    networks:
      kafka-net:
    restart: always

  consumer:
    image: greggu/consumer:0.1
    build:
      context: ./app/consumer
      dockerfile: Dockerfile
    environment:
      - CONSUMER_DELAY=0.01
      - START_DELAY=90
    depends_on:
      - grafana
    networks:
      kafka-net:
    restart: always

  zk1:
    image: confluentinc/cp-zookeeper:7.9.2
    hostname: zk1
    ports:
      - 12181:12181
    environment:
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_CLIENT_PORT: 12181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_INIT_LIMIT: 5
      ZOOKEEPER_SYNC_LIMIT: 2
      ZOOKEEPER_SERVERS: zk1:12888:13888;zk2:22888:23888;zk3:32888:33888
    networks:
      kafka-net:
        ipv4_address: 172.25.0.10
        aliases:
          - zk1

  zk2:
    image: confluentinc/cp-zookeeper:7.9.2
    hostname: zk2
    ports:
      - 22181:22181
    environment:
      ZOOKEEPER_SERVER_ID: 2
      ZOOKEEPER_CLIENT_PORT: 22181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_INIT_LIMIT: 5
      ZOOKEEPER_SYNC_LIMIT: 2
      ZOOKEEPER_SERVERS: zk1:12888:13888;zk2:22888:23888;zk3:32888:33888
    networks:
      kafka-net:
        ipv4_address: 172.25.0.11
        aliases:
          - zk2
    depends_on:
      - zk1

  zk3:
    image: confluentinc/cp-zookeeper:7.9.2
    hostname: zk3
    ports:
      - 32181:32181
    environment:
      ZOOKEEPER_SERVER_ID: 3
      ZOOKEEPER_CLIENT_PORT: 32181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_INIT_LIMIT: 5
      ZOOKEEPER_SYNC_LIMIT: 2
      ZOOKEEPER_SERVERS: zk1:12888:13888;zk2:22888:23888;zk3:32888:33888
    networks:
      kafka-net:
        ipv4_address: 172.25.0.13
        aliases:
          - zk3
    depends_on:
      - zk2

  # kafka
  kafka1:
    image: confluentinc/cp-kafka:7.9.2
    hostname: kafka1
    ports:
      - "19092:19092"
    depends_on:
      - zk1
      - zk2
      - zk3
    healthcheck:
      test: ps augwwx | egrep [S]upportedKafka
    environment:
      JMX_PORT: 9999
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zk1:12181,zk2:22181,zk3:32181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka1:19092
    networks:
      kafka-net:
        ipv4_address: 172.25.0.21
        aliases:
          - kafka1

  kafka2:
    image: confluentinc/cp-kafka:7.9.2
    hostname: kafka2
    ports:
      - "29092:29092"
    depends_on:
      - zk1
      - zk2
      - zk3
      - kafka1
    healthcheck:
      test: ps augwwx | egrep [S]upportedKafka
    environment:
      JMX_PORT: 9999
      KAFKA_BROKER_ID: 2
      KAFKA_ZOOKEEPER_CONNECT: zk1:12181,zk2:22181,zk3:32181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka2:29092
    networks:
      kafka-net:
        ipv4_address: 172.25.0.22
        aliases:
          - kafka2

  kafka3:
    image: confluentinc/cp-kafka:7.9.2
    hostname: kafka3
    ports:
      - "39092:39092"
    depends_on:
      - zk1
      - zk2
      - zk3
      - kafka2
    healthcheck:
      test: ps augwwx | egrep [S]upportedKafka
    environment:
      JMX_PORT: 9999
      KAFKA_BROKER_ID: 3
      KAFKA_ZOOKEEPER_CONNECT: zk1:12181,zk2:22181,zk3:32181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka3:39092
    networks:
      kafka-net:
        ipv4_address: 172.25.0.23
        aliases:
          - kafka3

  kafka-exporter:
    image: danielqsj/kafka-exporter:latest
    hostname: kafka-exporter
    command: "--kafka.server=kafka1:19092 --kafka.server=kafka2:29092 --kafka.server=kafka3:39092"
    ports:
      - 9308:9308
    networks:
      kafka-net:
        aliases:
          - kfkmon
    depends_on:
      - kafka1
      - kafka2
      - kafka3
    restart: always

  kafka-manager:
    image: sheepkiller/kafka-manager:alpine
    hostname: kafka-manager
    labels:
      - "traefik.http.routers.kfmanager.rule=Host(`kfmanager.tools.wsl2.contoso.com`)"
    ports:
      - 9000:9000
    environment:
      - ZK_HOSTS=zk1:12181,zk2:22181,zk3:32181
      - APPLICATION_SECRET=admin
    networks:
      kafka-net:
        aliases:
          - kfkmgr
    depends_on:
      - kafka1
      - kafka2
      - kafka3
    restart: always

  # monitoring
  prometheus:
    image: prom/prometheus:v2.11.1
    hostname: prometheus
    labels:
      - "traefik.http.routers.prometheus.rule=Host(`prometheus.tools.wsl2.contoso.com`)"
    networks:
      kafka-net:
        aliases:
          - prometheus
    ports:
      - 9090:9090
    volumes:
      - ./prometheus/conf/prometheus.yml:/etc/prometheus/prometheus.yml
    depends_on:
      - kafka-exporter

  grafana:
    image: grafana/grafana:latest
    hostname: grafana
    labels:
      - "traefik.http.routers.grafana.rule=Host(`grafana.tools.wsl2.contoso.com`)"
    networks:
      kafka-net:
    ports:
      - 3000:3000
    environment:
      - GF_ALERTING_ENABLED:false
    volumes:
      - ./grafana/provisioning:/etc/grafana/provisioning
    depends_on:
      - prometheus

  # efk
  # elasticsearch:
  #   image: elasticsearch:7.8.1
  #   hostname: elasticsearch
  #   labels:
  #     - "traefik.http.routers.es.rule=Host(`es.tools.wsl2.contoso.com`)"
  #   networks:
  #     kafka-net:
  #   # ports:
  #   #   - 9201:9201
  #   environment:
  #     ES_JAVA_OPTS: "-Xms750m -Xmx750m"
  #   depends_on:
  #     - traefik

  # kibana:
  #   image: kibana:7.8.1
  #   hostname: kibana
  #   labels:
  #     - "traefik.http.routers.kibana.rule=Host(`kibana.tools.wsl2.contoso.com`)"
  #   networks:
  #     kafka-net:
  #   depends_on:
  #     - traefik
  #     - elasticsearch

networks:
  kafka-net:
    ipam:
      driver: default
      config:
        - subnet: "172.25.0.0/24"

