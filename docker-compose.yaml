version: "3"

services:
  # zookeeper
  zk1:
    image: wurstmeister/zookeeper
    hostname: zk1
    environment:
      ZOO_MY_ID: 1
      ZOO_SERVERS: server.1=zk1:2888:3888;2181 server.2=zk2:2888:3888;2181 server.3=zk3:2888:3888;2181
    volumes:
      - ./data/zk1/data:/data
      - ./data/zk1/datalog:/datalog
    networks:
      kfk-ha:
        ipv4_address: 172.25.0.10
        aliases:
          - zk1

  zk2:
    image: wurstmeister/zookeeper
    hostname: zk2
    environment:
      ZOO_MY_ID: 2
      ZOO_SERVERS: server.1=zk1:2888:3888;2181 server.2=zk2:2888:3888;2181 server.3=zk3:2888:3888;2181
    volumes:
      - ./data/zk2/data:/data
      - ./data/zk2/datalog:/datalog
    networks:
      kfk-ha:
        ipv4_address: 172.25.0.11
        aliases:
          - zk2

  zk3:
    image: wurstmeister/zookeeper
    hostname: zk3
    environment:
      ZOO_MY_ID: 3
      ZOO_SERVERS: server.1=zk1:2888:3888;2181 server.2=zk2:2888:3888;2181 server.3=zk3:2888:3888;2181
    volumes:
      - ./data/zk3/data:/data
      - ./data/zk3/datalog:/datalog
    networks:
      kfk-ha:
        ipv4_address: 172.25.0.12
        aliases:
          - zk3

  zkwebui:
    image: tobilg/zookeeper-webui
    ports:
      - "8080:8080"
    environment:
      - USER=admin
      - PASSWORD=admin
      - ZK_DEFAULT_NODE=zk1:2181
    networks:
      kfk-ha:

  # kafka
  kafka:
    image: wurstmeister/kafka
    environment:
      KAFKA_LISTENERS: INSIDE://:9092,OUTSIDE://:9094
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ZOOKEEPER_CONNECT: zk1:2181
    networks:
      kfk-ha:
        ipv4_address: 172.25.0.21
    depends_on:
      - zk1
      - zk2
      - zk3

  kafka-exporter:
    image: danielqsj/kafka-exporter:latest
    command: "--kafka.server=kafka:9092"
    ports:
      - "9308:9308"
    networks:
      kfk-ha:
        aliases:
          - kfkmon
    depends_on:
      - kafka
    restart: always

  kafka-rest:
    image: nodefluent/kafka-rest
    ports:
      - 8082:8082
    networks:
      kfk-ha:
        aliases:
          - kfkrest
    depends_on:
      - kafka
      - zk1
    environment:
      # DEBUG: "*"
      KAFKA_REST_DEBUG: "all"
      KAFKA_REST_HTTP_PORT: 8082
      KAFKA_REST_CONSUMER_METADATA_BROKER_LIST: "kafka:9092"
      KAFKA_REST_PRODUCER_METADATA_BROKER_LIST: "kafka:9092"

  # kafka-rest-ui:
  #   image: nodefluent/kafka-rest-ui
  #   ports:
  #     - 8000:8000
  #   networks:
  #     kfk-ha:
  #       aliases:
  #         - kfkrestui
  #   depends_on:
  #     - kafka-rest
  #   environment:
  #     DEBUG: "*"
  #     REACT_APP_KAFKA_REST_URL: "http://kfkrest:8082/"
  #     REACT_APP_TIMEOUT: "3000"
  #     PROXY: "yes"

  kafka-schema-registry:
    image: confluentinc/cp-schema-registry:5.3.0
    ports:
      - "8081:8081"
    environment:
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: PLAINTEXT://kafka:9092
      SCHEMA_REGISTRY_HOST_NAME: kafka-schema-registry
      SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8081
    networks:
      kfk-ha:
        aliases:
          - kafka-schema-registry
    depends_on:
      - zk1
      - kafka

  schema-registry-ui:
    image: landoop/schema-registry-ui:0.9.4
    ports:
      - "8003:8000"
    environment:
      SCHEMAREGISTRY_URL: http://kafka-schema-registry:8081/
      PROXY: "true"
    networks:
      kfk-ha:
        aliases:
          - kafka-schema-registry-ui
    depends_on:
      - kafka-schema-registry

  kafka-topics-ui:
    image: landoop/kafka-topics-ui:0.9.4
    ports:
      - "8001:8000"
    environment:
      KAFKA_REST_PROXY_URL: "http://kfkrest:8082/"
      PROXY: "true"
    networks:
      kfk-ha:
        aliases:
          - kafka-topics-ui
    depends_on:
      - zk1
      - kafka
      - kafka-schema-registry
      - kafka-rest

  # monitoring
  prometheus:
    image: prom/prometheus:v2.11.1
    networks:
      kfk-ha:
        aliases:
          - prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/conf/prometheus.yml:/etc/prometheus/prometheus.yml

  grafana:
    image: grafana/grafana:6.2.5
    networks:
      kfk-ha:
    ports:
      - "3000:3000"

networks:
  kfk-ha:
    ipam:
      driver: default
      config:
        - subnet: "172.25.0.0/24"
